% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/population.R
\name{Population}
\alias{Population}
\title{Population Class for Genomic Simulation}
\description{
The \code{Population} R6 class encapsulates the state and behavior of a simulated
genomic population. It manages genotype and phenotype data, supports
initialization, updating, and querying of individuals, and integrates with
phenotype and mating model classes for flexible simulation workflows.
}
\details{
The Population class simulates genomic populations with realistic genetic
structure. It generates correlated genotype data, supports multiple phenotypes,
and can advance through generations via mating simulations. The class uses
parallel processing and file-backed matrices for scalability. Once compiled,
the object becomes immutable.
}
\section{Methods}{

\itemize{
\item \code{initialize()}: Set up the initial population state.
\item \code{add_phenotype()}: Add a phenotype to the population.
\item \code{remove_phenotype()}: Remove a phenotype from the population.
\item \code{compile()}: Compile and initialise the population data.
\item \code{update()}: Advance the population one generation with mate matching.
}
}

\seealso{
Other related classes and functions: \code{Phenotype}, \code{MatingModel}
}
\section{Active bindings}{
\if{html}{\out{<div class="r6-active-bindings">}}
\describe{
\item{\code{genotypes}}{Get the genotype data matrix.}

\item{\code{haplotypes}}{Get the haplotype data.}

\item{\code{recomb_rate}}{Get the recombination rate.}

\item{\code{mutation_rate}}{Get the mutation rate.}

\item{\code{size}}{Get the number of individuals in the population.}

\item{\code{n_loci}}{Get the number of loci.}

\item{\code{mating_model}}{Get or set the mating model.}

\item{\code{phenotypes}}{Get or set the list of phenotypes.}

\item{\code{snp_mafs}}{Get the SNP minor allele frequencies.}

\item{\code{generation}}{Get the current generation.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-Population-new}{\code{Population$new()}}
\item \href{#method-Population-add_phenotype}{\code{Population$add_phenotype()}}
\item \href{#method-Population-remove_phenotype}{\code{Population$remove_phenotype()}}
\item \href{#method-Population-compile}{\code{Population$compile()}}
\item \href{#method-Population-update}{\code{Population$update()}}
\item \href{#method-Population-clone}{\code{Population$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Population-new"></a>}}
\if{latex}{\out{\hypertarget{method-Population-new}{}}}
\subsection{Method \code{new()}}{
Initialise a new Population object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Population$new(
  size,
  n_loci,
  recomb_rate = 1e-08,
  mutation_rate = 1e-08,
  snp_dist = "beta",
  snp_params = c(5, 5),
  phenotypes = NULL,
  mating_model = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{size}}{Integer. The number of individuals in the population.
Must be even.}

\item{\code{n_loci}}{Integer. The number of genetic loci to simulate.}

\item{\code{recomb_rate}}{Numeric. The recombination rate between loci
(default: 1e-8).}

\item{\code{mutation_rate}}{Numeric. The probability of mutation at loci.
(default: 1e-8)}

\item{\code{snp_dist}}{Character. Distribution for SNP minor allele frequencies
("beta" or "unif").}

\item{\code{snp_params}}{Numeric vector of length 2. Parameters for the SNP
distribution.}

\item{\code{phenotypes}}{Phenotype object or NULL. Optional phenotype to
associate with the population.}

\item{\code{mating_model}}{MatingModel object or NULL. Optional mating model for
the population.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A new Population object.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Population-add_phenotype"></a>}}
\if{latex}{\out{\hypertarget{method-Population-add_phenotype}{}}}
\subsection{Method \code{add_phenotype()}}{
Add a phenotype to the population
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Population$add_phenotype(phenotype)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{phenotype}}{Phenotype object to be added to the population}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
This method can only be called before the population is
compiled.
}

\subsection{Returns}{
No return value. Adds the phenotype to the population's list of
phenotypes.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Population-remove_phenotype"></a>}}
\if{latex}{\out{\hypertarget{method-Population-remove_phenotype}{}}}
\subsection{Method \code{remove_phenotype()}}{
Remove a phenotype from the population
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Population$remove_phenotype(phenotype_name)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{phenotype_name}}{Character string. The name of the phenotype to
remove}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
This method can only be called before the population is
compiled.
}

\subsection{Returns}{
No return value. Removes the phenotype from the population's list
of phenotypes.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Population-compile"></a>}}
\if{latex}{\out{\hypertarget{method-Population-compile}{}}}
\subsection{Method \code{compile()}}{
Compile and initialise the population data
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Population$compile(verbose = TRUE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{verbose}}{Logical. Whether to display progress messages during
compilation (default: TRUE)}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
This method must be called after all phenotypes and mating
models have been set up. It initialises the genotype data, generates
sibling pairs, and sets up phenotypes. Once compiled, the population
object cannot be modified.
}

\subsection{Returns}{
No return value. Compiles the population object and initialises
all data structures.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Population-update"></a>}}
\if{latex}{\out{\hypertarget{method-Population-update}{}}}
\subsection{Method \code{update()}}{
Advance the population one generation with mate matching
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Population$update(ncores = parallel::detectCores() - 1, overwrite = TRUE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{ncores}}{Integer. Number of cores to use for parallel computing.}

\item{\code{overwrite}}{Logical. Should existing output files be overwritten?}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Population-clone"></a>}}
\if{latex}{\out{\hypertarget{method-Population-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Population$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
